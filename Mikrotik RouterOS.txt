jump-target (name; Default: )	If action=jump specified, then specifies the user-defined firewall chain to process the packet.
limit (integer/time,integer; Default: )	Matches packets up to a limited rate. A rule using this matcher will match until this limit is reached.

    count - maximum average packet rate, measured in packets per second (pps), unless followed by Time option
    time - specifies the time interval over which the packet rate is measured
    burst - number of packets to match in a burst

log (yes | no; Default: no)	Add a message to the system log containing the following data: in-interface, out-interface, src-mac, dst-mac, eth-protocol, ip-protocol, src-ip:port->dst-ip:port, and length of the packet.
log-prefix (text; Default: )	Defines the prefix to be printed before the logging information.
mac-protocol (802.2 | arp | capsman | dot1x | homeplug-av | ip | ipv6 | ipx | lacp | length | lldp | loop-protect | macsec | mpls-multicast | mpls-unicast | packing-compr | packing-simple | pppoe | pppoe-discovery | rarp | romon | service-vlan | vlan | integer 0..65535 | hex 0x0000-0xffff; Default: )	Ethernet payload type (MAC-level protocol). To match protocol type for VLAN encapsulated frames (0x8100 or 0x88a8), a vlan-encap property should be used.

    802.2 - 802.2 Frames (0x0004)
    arp - Address Resolution Protocol (0x0806)
    homeplug-av - HomePlug AV MME (0x88E1)
    ip - Internet Protocol version 4 (0x0800)
    ipv6 - Internet Protocol Version 6 (0x86DD)
    ipx - Internetwork Packet Exchange (0x8137)
    length - Packets with length field (0x0000-0x05DC)
    lldp - Link Layer Discovery Protocol (0x88CC)
    loop-protect - Loop Protect Protocol (0x9003)
    mpls-multicast - MPLS multicast (0x8848)
    mpls-unicast - MPLS unicast (0x8847)
    packing-compr - Encapsulated packets with compressed IP packing (0x9001)
    packing-simple - Encapsulated packets with simple IP packing (0x9000)
    pppoe - PPPoE Session Stage (0x8864)
    pppoe-discovery - PPPoE Discovery Stage (0x8863)
    rarp - Reverse Address Resolution Protocol (0x8035)
    service-vlan - Provider Bridging (IEEE 802.1ad) & Shortest Path Bridging IEEE 802.1aq (0x88A8)
    vlan - VLAN-tagged frame (IEEE 802.1Q) and Shortest Path Bridging IEEE 802.1aq with NNI compatibility (0x8100)

new-packet-mark (string; Default: )	Sets a new packet-mark value.
new-priority (integer | from-ingress; Default: )	Sets a new priority for a packet. This can be the VLAN, WMM or MPLS EXP priority Read more. This property can also be used to set an internal priori
out-bridge (name; Default: )	Outgoing bridge interface.
out-bridge-list (name; Default: )	Set of bridge interfaces defined in interface list. Works the same as out-bridge.
out-interface (name; Default: )	Interface that the packet is leaving the bridge through.
out-interface-list (name; Default: )	Set of interfaces defined in interface list. Works the same as out-interface.
packet-mark (name; Default: )	Match packets with a certain packet mark.
packet-type (broadcast | host | multicast | other-host; Default: )	MAC frame type:

    broadcast - broadcast MAC packet
    host - packet is destined to the bridge itself
    multicast - multicast MAC packet
    other-host - packet is destined to some other unicast address, not to the bridge itself

src-address (IP address; Default: )	Source IP address (only if MAC protocol is set to IPv4).
src-address6 (IPv6 address; Default: )	Source IPv6 address (only if MAC protocol is set to IPv6).
src-mac-address (MAC address; Default: )	Source MAC address.
src-port (integer 0..65535; Default: )	Source port number or range (only for TCP or UDP protocols).
stp-flags (topology-change | topology-change-ack; Default: )	The BPDU (Bridge Protocol Data Unit) flags. Bridge exchange configuration messages named BPDU periodically for preventing loops

    topology-change - topology change flag is set when a bridge detects port state change, to force all other bridges to drop their host tables and recalculate network topology
    topology-change-ack - topology change acknowledgment flag is sent in replies to the notification packets

stp-forward-delay (integer 0..65535; Default: )	Forward delay timer.
stp-hello-time (integer 0..65535; Default: )	STP hello packets time.
stp-max-age (integer 0..65535; Default: )	Maximal STP message age.
stp-msg-age (integer 0..65535; Default: )	STP message age.
stp-port (integer 0..65535; Default: )	STP port identifier.
stp-root-address (MAC address; Default: )	Root bridge MAC address.
stp-root-cost (integer 0..65535; Default: )	Root bridge cost.
stp-root-priority (integer 0..65535; Default: )	Root bridge priority.
stp-sender-address (MAC address; Default: )	STP message sender MAC address.
stp-sender-priority (integer 0..65535; Default: )	STP sender priority.
stp-type (config | tcn; Default: )	The BPDU type:

    config - configuration BPDU
    tcn - topology change notification

tls-host (string; Default: )	Allows matching https traffic based on TLS SNI hostname. Accepts GLOB syntax for wildcard matching. Note that matcher will not be able to match hostname if the TLS handshake frame is fragmented into multiple TCP segments (packets).
vlan-encap (802.2 | arp | ip | ipv6 | ipx | length | mpls-multicast | mpls-unicast | pppoe | pppoe-discovery | rarp | vlan | integer 0..65535 | hex 0x0000-0xffff; Default: )	Matches the MAC protocol type encapsulated in the VLAN frame.
vlan-id (integer 0..4095; Default: )	Matches the VLAN identifier field.
vlan-priority (integer 0..7; Default: )	Matches the VLAN priority (priority code point)

Footnotes:

    STP matchers are only valid if the destination MAC address is 01:80:C2:00:00:00/FF:FF:FF:FF:FF:FF (Bridge Group address), also STP should be enabled.

    ARP matchers are only valid if mac-protocol is arp or rarp

    VLAN matchers are only valid for 0x8100 or 0x88a8 ethernet protocols

    IP or IPv6 related matchers are only valid if mac-protocol is either set to ip or ipv6

    802.3 matchers are only consulted if the actual frame is compliant with IEEE 802.2 and IEEE 802.3 standards. These matchers are ignored for other packets.

Bridge Packet Filter

This section describes specific bridge filter options.

Sub-menu: /interface bridge filter
action (accept | drop | jump | log | mark-packet | passthrough | return | set-priority; Default: accept)	Action to take if the packet is matched by the rule:

    accept - accept the packet. No action, i.e., the packet is passed through without undertaking any action, and no more rules are processed in the relevant list/chain
    drop - silently drop the packet (without sending the ICMP reject message)
    jump - jump to the chain specified by the value of the jump-target argument
    log - add a message to the system log containing the following data: in-interface, out-interface, src-mac, dst-mac, eth-proto, protocol, src-ip:port->dst-ip:port and length of the packet. After packet is matched it is passed to the next rule in the list, similar as passthrough
    mark - mark the packet to use the mark later
    passthrough - ignore this rule and go on to the next one. Acts the same way as a disabled rule, except for the ability to count packets
    return - return to the previous chain, from where the jump took place
    set-priority - set priority specified by the new-priority parameter on the packets sent out through a link that is capable of transporting priority (VLAN or WMM-enabled wireless interface). Read more

Bridge NAT

This section describes specific bridge NAT options.

Sub-menu: /interface bridge nat
action (accept | drop | jump | mark-packet | redirect | set-priority | arp-reply | dst-nat | log | passthrough | return | src-nat; Default: accept)	Action to take if the packet is matched by the rule:

    accept - accept the packet. No action, i.e., the packet is passed through without undertaking any action, and no more rules are processed in the relevant list/chain
    arp-reply - send a reply to an ARP request (any other packets will be ignored by this rule) with the specified MAC address (only valid in dstnat chain)
    drop - silently drop the packet (without sending the ICMP reject message)
    dst-nat - change destination MAC address of a packet (only valid in dstnat chain)
    jump - jump to the chain specified by the value of the jump-target argument
    log - log the packet
    mark - mark the packet to use the mark later
    passthrough - ignore this rule and go on to the next one. Acts the same way as a disabled rule, except for the ability to count packets
    redirect - redirect the packet to the bridge itself (only valid in dstnat chain)
    return - return to the previous chain, from where the jump took place
    set-priority - set priority specified by the new-priority parameter on the packets sent out through a link that is capable of transporting priority (VLAN or WMM-enabled wireless interface). Read more
    src-nat - change source MAC address of a packet (only valid in srcnat chain)

to-arp-reply-mac-address (MAC address; Default: )	Source MAC address to put in Ethernet frame and ARP payload, when action=arp-reply is selected
to-dst-mac-address (MAC address; Default: )	Destination MAC address to put in Ethernet frames, when action=dst-nat is selected
to-src-mac-address (MAC address; Default: )	Source MAC address to put in Ethernet frames, when action=src-nat is selected
See also

    CRS1xx/2xx series switches
    CRS3xx, CRS5xx series switches, and CCR2116, CCR2216 routers
    Switch chip features
    MTU on RouterBOARD
    Layer2 misconfiguration
    Bridge VLAN Table
    Wireless VLAN Trunk
    VLANs on Wireless
	
	

    Creado por Edgars P., actualizado por Ãºltima vez el may 13, 2025 21 min de lectura

    Summary
        Features
        Models
        Abbreviations
    Port switching
    VLAN
        VLAN Filtering
            Port-Based VLAN
            MAC Based VLAN
            Protocol Based VLAN
            VLAN Tunneling (Q-in-Q)
        Ingress VLAN translation
    (R/M)STP
    Bonding
    Multi-chassis Link Aggregation Group
    L3 Hardware Offloading
    Port isolation
    IGMP/MLD Snooping
    DHCP Snooping and DHCP Option 82
    Controller Bridge and Port Extender
    Mirroring
        Configuration examples
            Port Based Mirroring
            VLAN Based Mirroring
            MAC Based Mirroring
            IP Based Mirroring
            Remote Switch Port Analyzer
        Property Reference
    Traffic Shaping
    Traffic Storm Control
    MPLS hardware offloading
    Switch Rules (ACL)
    Port Security
    Dual Boot
    Configuring SwOS using RouterOS
    See also

Summary

The CCR3xx, CRS5xx series switches and CCR2116, CCR2216 routers have highly integrated switches with high-performance CPU and feature-rich packet processors. These devices can be designed into various Ethernet applications including unmanaged switch, Layer 2 managed switch, carrier switch, inter-VLAN router, and wired unified packet processor.

This article applies to CRS3xx, CRS5xx series switches, CCR2116, CCR2216 routers, and not to CRS1xx/CRS2xx series switches.
Features
Forwarding	

    Configurable ports for switching or routing
    Full non-blocking wire-speed switching
    Large Unicast FDB for Layer 2 unicast forwarding
    Forwarding Databases works based on IVL
    Jumbo frame support
    IGMP Snooping support
    DHCP Snooping with Option 82 

Routing	

    Layer 3 Hardware Offloading:
        IPv4, IPv6 Unicast Routing
        Supported on Ethernet, Bridge, Bonding, and VLAN interfaces
        ECMP
        Blackholes
        Offloaded Fasttrack connections 1
        Offloaded NAT for Fasttrack connections 1
        Multiple MTU profiles

1. Applies only to certain switch models
Spanning Tree Protocol	

    STP
    RSTP
    MSTP
    Edge port, BPDU Guard, Root Guard

Mirroring	

    Various types of mirroring:
        Port based mirroring
        VLAN based mirroring
        MAC based mirroring
        Remote Switch Port Analyzer (RSPAN)

VLAN	

    Fully compatible with IEEE802.1Q and IEEE802.1ad VLAN
    4k active VLANs
    Flexible VLAN assignment:
        Port based VLAN
        Protocol based VLAN
        MAC based VLAN
    VLAN filtering
    Ingress VLAN translation
    Multiple VLAN Registration protocol (MVRP)

Bonding	

    Supports 802.3ad (LACP), balance-xor and active-backup modes
    Up to 8 member ports per bonding interface
    Hardware automatic failover and load balancing
    MLAG

Quality of Service (QoS)	

    Eight output queues per port

    DSCP and 802.1p PCP mapping

    Port based Layer2 and Layer3 trust settings

    Port and Queue based egress rate limiter

    Policy based QoS via ACL rules

    Strict Priority (SP) and Shaped Deficit Weighted Round Robin (SDWRR) queuing

    Enhanced Transmission Selection (ETS) scheduling

    Weighted Random Early Detection (WRED) 1

    Explicit Congestion Notification (ECN) 1

    Priority-based Flow Control (PFC) 1

    Resource allocation control (queue, shared-pool and multicast based) with extensive monitoring capabilities

    Compatible with Dante enviroments

    Compatible with RDMA over Converged Ethernet (RoCE) enviroment 1

    Ingress traffic limiting (port based or via ACL rules)

    Traffic storm control

1. Applies only to certain switch models
Port isolation	

    Applicable for Private VLAN implementation

Access Control List	

    Ingress ACL tables
    Classification based on ports, L2, L3, L4 protocol header fields
    ACL actions include filtering, forwarding and modifying of the protocol header fields

PTP	

    Two-step Ordinary Clock and Boundary Clock.
    Hardware timestamping, ensuring clock syncronization in nanosecond(ns) range.
    IPv4 and Layer 2 (L2) multicast transport modes.
    End-to-End (E2E) and Peer-to-Peer (P2P) delay mechanisms.
    IEEE 1588-2008 (PTPv2)
    Profile Support for:
        802.1AS: Audio Video Bridging (AVB) and Time-Sensitive Networking (TSN).
        AES67: High-performance audio-over-IP interoperability.
        G.8275.1: Frequency and phase synchronization in PTP-aware networks.
        SMPTE: Audio/video synchronization in professional broadcast environments

PTP support is hardware-dependent, please refer to the list of supported devices.

For L3 hardware offloading feature support and hardware limits, please refer to Feature Support and Device Support user manuals.

For QoS hardware offloading feature support and hardware limits, please refer to Quality of Service (QoS) user manuals.
Models

This table clarifies the main differences between Cloud Router Switch models and CCR routers.
Model	Switch Chip	CPU	Cores	10G SFP+	10G Ethernet	25G SFP28	40G QSFP+	100G QSFP28	ACL rules	Unicast FDB entries	Jumbo Frame (Bytes)
netPower 15FR (CRS318-1Fi-15Fr-2S)	Marvell-98DX224S	800MHz	1	-	-	-	-	-	128	16,000	10218
netPower 16P (CRS318-16P-2S+)	Marvell-98DX226S	800MHz	1	2	-	-	-	-	128	16,000	10218
CRS310-1G-5S-4S+ (netFiber 9/IN)	Marvell-98DX226S	800MHz	1	4	-	-	-	-	128	16,000	10218
CRS320-8P-8B-4S+RM	Marvell-98DX226S	800MHz	2	4	-
	-
	-
	-
	128
	16,000	10218
CRS304-4XG-IN	Marvell-98DX2528	1200 MHz	2	-	4	-	-	-	128	16,000	10218
CRS326-24G-2S+ (RM/IN)	Marvell-98DX3236	800MHz	1	2	-	-	-	-	128	16,000	10218
CRS328-24P-4S+	Marvell-98DX3236	800MHz	1	4	-	-	-	-	128	16,000	10218
CRS328-4C-20S-4S+	Marvell-98DX3236	800MHz	1	4	-	-	-	-	128	16,000	10218
CRS305-1G-4S+	Marvell-98DX3236	800MHz	1	4	-	-	-	-	128	16,000	10218
CRS309-1G-8S+	Marvell-98DX8208	800MHz	2	8	-	-	-	-	1024	32,000	10218
CRS317-1G-16S+	Marvell-98DX8216	800MHz	2	16	-	-	-	-	1024	128,000	10218
CRS312-4C+8XG	Marvell-98DX8212	650MHz	1	4 (combo ports)	8 + 4 (combo ports)	-	-	-	512	32,000	10218
CRS326-24S+2Q+	Marvell-98DX8332	650MHz	1	24	-	-	2	-	256	32,000	10218
CRS326-4C+20G+2Q+RM	Marvell-98DX8332	650MHz	1
	4 (combo ports)	-
	-
	2	-
	256	32,000	10218
CRS354-48G-4S+2Q+	Marvell-98DX3257	650MHz	1	4	-	-	2	-	170	32,000	10218
CRS354-48P-4S+2Q+	Marvell-98DX3257	650MHz	1	4	-	-	2	-	170	32,000	10218
CRS504-4XQ (IN/OUT)	Marvell-98DX4310	650MHz	1	-	-	-	-	4	1024	128,000	10218
CRS510-8XS-2XQ-IN	Marvell-98DX4310	650MHz	1	-	-	8	-	2	1024	128,000	10218
CRS518-16XS-2XQ	Marvell-98DX8525	650MHz	1	-	-	16	-	2	1024	128,000	10218
CRS520-4XS-16XQ-RM	Marvell-98CX8410	2000MHz	4
	-
	2
	4
	-
	16
	682
	256,000
	9570
CCR2116-12G-4S+	Marvell-98DX3255	2000MHz	16	4	-	-	-	-	512	32,000	9570
CCR2216-1G-12XS-2XQ	Marvell-98DX8525	2000MHz	16	-	-	12	-	2	1024	128,000	9570
Abbreviations

    FDB - Forwarding Database
    MDB - Multicast Database
    SVL - Shared VLAN Learning
    IVL - Independent VLAN Learning
    PVID - Port VLAN ID
    ACL - Access Control List
    CVID - Customer VLAN ID
    SVID - Service VLAN ID

Port switching

In order to set up a port switching, check the Bridge Hardware Offloading page.

Currently, it is possible to create only one bridge with hardware offloading. Use the hw=yes/no parameter to select which bridge will use hardware offloading.


Bridge STP/RSTP/MSTP, IGMP Snooping and VLAN filtering settings don't affect hardware offloading, since RouterOS v6.42 Bonding interfaces are also hardware offloaded.
VLAN

Since RouterOS version 6.41, a bridge provides VLAN aware Layer2 forwarding and VLAN tag modifications within the bridge. This set of features makes bridge operation more like a traditional Ethernet switch and allows to overcome Spanning Tree compatibility issues compared to the configuration when tunnel-like VLAN interfaces are bridged. Bridge VLAN Filtering configuration is highly recommended to comply with STP (802.1D), RSTP (802.1w) standards and it is mandatory to enable MSTP (802.1s) support in RouterOS.
VLAN Filtering

VLAN filtering is described on the Bridge VLAN Filtering section.

VLAN setup examples

Below are describes some of the most common ways how to utilize VLAN forwarding.
Port-Based VLAN

The configuration is described on the Bridge VLAN FIltering section.
MAC Based VLAN

    The Switch Rule table is used for MAC Based VLAN functionality, see this table on how many rules each device supports.
    MAC-based VLANs will only work properly between switch ports and not between switch ports and CPU. When a packet is being forwarded to the CPU, the pvid property for the bridge port will be always used instead of new-vlan-id from ACL rules.
    MAC-based VLANs will not work for DHCP packets when DHCP snooping is enabled.

Enable switching on ports by creating a bridge with enabled hw-offloading:
/interface bridge
add name=bridge1 vlan-filtering=yes
/interface bridge port
add bridge=bridge1 interface=ether2 hw=yes
add bridge=bridge1 interface=ether7 hw=yes

Add VLANs in the Bridge VLAN table and specify ports:
/interface bridge vlan
add bridge=bridge1 tagged=ether2 untagged=ether7 vlan-ids=200,300,400

Add Switch rules which assign VLAN id based on MAC address:
/interface ethernet switch rule
add switch=switch1 ports=ether7 src-mac-address=A4:12:6D:77:94:43/FF:FF:FF:FF:FF:FF new-vlan-id=200
add switch=switch1 ports=ether7 src-mac-address=84:37:62:DF:04:20/FF:FF:FF:FF:FF:FF new-vlan-id=300
add switch=switch1 ports=ether7 src-mac-address=E7:16:34:A1:CD:18/FF:FF:FF:FF:FF:FF new-vlan-id=400
Protocol Based VLAN

    The Switch Rule table is used for Protocol Based VLAN functionality, see this table on how many rules each device supports.
    Protocol-based VLANs will only work properly between switch ports and not between switch ports and CPU. When a packet is being forwarded to the CPU, the pvid property for the bridge port will be always used instead of new-vlan-id from ACL rules.
    Protocol-based VLANs will not work for DHCP packets when DHCP snooping is enabled.

Enable switching on ports by creating a bridge with enabled hw-offloading:
/interface bridge
add name=bridge1 vlan-filtering=yes
/interface bridge port
add bridge=bridge1 interface=ether2 hw=yes
add bridge=bridge1 interface=ether6 hw=yes
add bridge=bridge1 interface=ether7 hw=yes
add bridge=bridge1 interface=ether8 hw=yes

Add VLANs in the Bridge VLAN table and specify ports:
/interface bridge vlan
add bridge=bridge1 tagged=ether2 untagged=ether6 vlan-ids=200
add bridge=bridge1 tagged=ether2 untagged=ether7 vlan-ids=300
add bridge=bridge1 tagged=ether2 untagged=ether8 vlan-ids=400

Add Switch rules which assign VLAN id based on MAC protocol:
/interface ethernet switch rule
add mac-protocol=ip new-vlan-id=200 ports=ether6 switch=switch1
add mac-protocol=ipx new-vlan-id=300 ports=ether7 switch=switch1
add mac-protocol=0x80F3 new-vlan-id=400 ports=ether8 switch=switch1
VLAN Tunneling (Q-in-Q)

Since RouterOS v6.43 it is possible to use a provider bridge (IEEE 802.1ad) and Tag Stacking VLAN filtering, and hardware offloading at the same time. The configuration is described in the Bridge VLAN Tunneling (Q-in-Q) section.

Devices with switch chip Marvell-98DX3257 (e.g. CRS354 series) do not support VLAN filtering on 1Gbps Ethernet interfaces for other VLAN types (0x88a8 and 0x9100).
Ingress VLAN translation

It is possible to translate a certain VLAN ID to a different VLAN ID using ACL rules on an ingress port. In this example we create two ACL rules, allowing bidirectional communication. This can be done by doing the following.

Create a new bridge and add ports to it with hardware offloading:
/interface bridge
add name=bridge1 vlan-filtering=no
/interface bridge port
add interface=ether1 bridge=bridge1 hw=yes
add interface=ether2 bridge=bridge1 hw=yes

Add ACL rules to translate a VLAN ID in each direction:
/interface ethernet switch rule
add new-dst-ports=ether2 new-vlan-id=20 ports=ether1 switch=switch1 vlan-id=10
add new-dst-ports=ether1 new-vlan-id=10 ports=ether2 switch=switch1 vlan-id=20

Add both VLAN IDs to the bridge VLAN table:
/interface bridge vlan
add bridge=bridge1 tagged=ether1 vlan-ids=10
add bridge=bridge1 tagged=ether2 vlan-ids=20

Enable bridge VLAN filtering:
/interface bridge set bridge1 vlan-filtering=yes

Bidirectional communication is limited only between two switch ports. Translating VLAN ID between more ports can cause traffic flooding or incorrect forwarding between the same VLAN ports.

By enabling vlan-filtering you will be filtering out traffic destined to the CPU, before enabling VLAN filtering you should make sure that you set up a Management port.
(R/M)STP

CRS3xx, CRS5xx series switches, and CCR2116, CCR2216 routers are capable of running STP, RSTP, and MSTP on a hardware level. For more detailed information you should check out the Spanning Tree Protocol manual page.
Bonding

CRS3xx, CRS5xx series switches and CCR2116, CCR2216 routers support hardware offloading with bonding interfaces. Only 802.3ad (LACP), balance-xor (static LAG) and active-backup bonding modes are hardware offloaded, other bonding modes will use the CPU's resources. You can find more information about the bonding interfaces in the Bonding Interface section.

To create a hardware offloaded bonding interface, you must create a bonding interface with a supported bonding mode:
/interface bonding
add mode=802.3ad name=bond1 slaves=ether1,ether2

This interface can be added to a bridge alongside other interfaces:
/interface bridge
add name=bridge
/interface bridge port
add bridge=bridge interface=bond1 hw=yes
add bridge=bridge interface=ether3 hw=yes
add bridge=bridge interface=ether4 hw=yes

Do not add interfaces to a bridge that are already in a bond, RouterOS will not allow you to add an interface to bridge that is already a slave port for bonding.

Make sure that the bonding interface is hardware offloaded by checking the "H" flag:
/interface bridge port print 
Flags: X - disabled, I - inactive, D - dynamic, H - hw-offload 
 #     INTERFACE                                 BRIDGE                                 HW
 0   H bond1                                     bridge                                 yes
 1   H ether3                                    bridge                                 yes
 2   H ether4                                    bridge                                 yes

With HW-offloaded bonding interfaces, the built-in switch chip will always use Layer2+Layer3+Layer4 for a transmit hash policy, changing the transmit hash policy manually will have no effect.
Multi-chassis Link Aggregation Group

MLAG (Multi-chassis Link Aggregation Group) implementation in RouterOS allows configuring LACP bonds on two separate devices, while the client device believes to be connected on the same machine. This provides a physical redundancy in case of switch failure. All CRS3xx, CRS5xx series and CCR2116, CCR2216 devices can be configured with MLAG. Read here for more information.
L3 Hardware Offloading

Layer3 hardware offloading (otherwise known as IP switching or HW routing) will allow to offload some of the router features onto the switch chip. This allows reaching wire speeds when routing packets, which simply would not be possible with the CPU. 

Offloaded feature set depends on the used chipset. Read here for more info.
Port isolation

Since RouterOS v6.43 is it possible to create a Private VLAN setup, an example can be found in the Switch chip port isolation manual page. Hardware offloaded bonding interfaces are not included in the switch port-isolation menu, but it is still possible to configure port-isolation individually on each secondary interface of the bonding.

Port isolation can be used with vlan-filtering bridge and it is possible to isolate ports that are members of the same VLAN. The isolation works per-port, it is not possible to isolate ports per-VLAN.


IGMP/MLD Snooping

CRS3xx, CRS5xx series switches and CCR2116, CCR2216 routers are capable of using IGMP/MLD Snooping on a hardware level. To see more detailed information, you should check out the IGMP/MLD snooping manual page.
DHCP Snooping and DHCP Option 82

CRS3xx, CRS5xx series switches and CCR2116, CCR2216 routers are capable of using DHCP Snooping with Option 82 on a hardware level. The switch will create a dynamic ACL rule to capture the DHCP packets and redirect them to the main CPU for further processing. To see more detailed information, please visit the DHCP Snooping and DHCP Option 82 manual page.

Starting from RouterOS v7.17, DHCP snooping is supported with hardware offloading bonding interfaces.
Controller Bridge and Port Extender

Controller Bridge (CB) and Port Extender (PE) is an IEEE 802.1BR standard implementation in RouterOS. It allows virtually extending the CB ports with a PE device and managing these extended interfaces from a single controlling device. Such configuration provides a simplified network topology, flexibility, increased port density, and ease of manageability. See more details on Controller Bridge and Port Extender manual.
Mirroring

Mirroring is a function that allows a network switch to duplicate all the data passing through it and send a copy to another specified port, known as the mirror-target. This feature is useful for setting up a tap device, which allows for analyzing network traffic using a separate device. You can set up mirroring in a simple way by designating source ports (see mirror-egress and mirror-ingress in /interface/ethernet/switch/port), or you can configure more advanced mirroring based on different criteria (see mirror in /interface/ethernet/switch/rule).

It is important to note that the mirror-target port must be on the same switch. You can check the device block diagram or navigate to the /interface/ethernet menu to identify which interfaces are connected where. When setting up the configration, it is not mandatory to add the mirror-target interface to the same hardware offloaded bridge where the source ports are set up. The mirror-target port can be a standalone interface (not configured as a bridge port), or it can be within a bridge setup. When using the mirror-target with a bridge, note that data and mirrored traffic may both travel on the same LAN. In such cases, consider employing RSPAN (Remote Switch Port Analyzer), where mirrored traffic is encapsulated into a separate VLAN before being transmitted over the network.

Additionally, you can set the mirror-target port to a special value "cpu", which means that the copied packets will be sent to the switch chip's CPU port.
Configuration examples
Port Based Mirroring

Starting from RouterOS version 7.15, it is possible to configure multiple source ports and selectively choose whether to mirror incoming traffic, outgoing traffic, or both. In this example, both incoming and outgoing traffic from the ether2 interface will be copied and sent to the ether3 interface for monitoring or analysis.
# Since RouterOS v7.15
/interface ethernet switch port
set ether2 mirror-egress=yes mirror-ingress=yes
/interface ethernet switch
set switch1 mirror-target=ether3

# Older RouterOS:
/interface ethernet switch
set switch1 mirror-source=ether2 mirror-target=ether3
VLAN Based Mirroring

Using ACL rules, it is possible to mirror packets from multiple interfaces using the ports setting. Additionally, you can specify more detailed criteria such as VLAN ID, MAC/IP address or TCP/UDP port. Only ingress packets are mirrored to mirror-target interface. This example will mirror incoming VLAN 11 traffic from the ether2 interface, and send copies to the ether3 interface. To use an ACL rule with a vlan-id matcher, you need to have bridge vlan-filtering enabled.
/interface bridge
set bridge1 vlan-filtering=yes
/interface ethernet switch
set switch1 mirror-target=ether3
/interface ethernet switch rule
add mirror=yes ports=ether1 switch=switch1 vlan-id=11
MAC Based Mirroring

This example will mirror incoming traffic with 64:D1:54:D9:27:E6 MAC destination or source address from the ether1 interface, and send copies to the ether3 interface.
/interface ethernet switch
set switch1 mirror-target=ether3
/interface ethernet switch rule
add mirror=yes ports=ether1 switch=switch1 dst-mac-address=64:D1:54:D9:27:E6/FF:FF:FF:FF:FF:FF
add mirror=yes ports=ether1 switch=switch1 src-mac-address=64:D1:54:D9:27:E6/FF:FF:FF:FF:FF:FF
IP Based Mirroring

This example will mirror incoming traffic with 192.168.88.0/24 IP destination or source address from the ether1 interface, and send copies to the ether3 interface.
/interface ethernet switch
set switch1 mirror-target=ether3 mirror-source=none
/interface ethernet switch rule
add mirror=yes ports=ether1 switch=switch1 src-address=192.168.88.0/24
add mirror=yes ports=ether1 switch=switch1 dst-address=192.168.88.0/24

There are other options as well, check the ACL section to find out all possible parameters that can be used to match packets.
Remote Switch Port Analyzer

This example will mirror incomming and outgoing traffic from the ether2 interface, copies will be encapsulated in 802.1Q VLAN using the 999 as VLAN ID, and packets will be sent to the ether3 interface. If the original traffic is already VLAN tagged, RSPAN will add another layer of VLAN tagging as an outer tag. This results in the mirrored traffic being tagged twice. If the mirror-target port is included in vlan-filtering bridge, it is not required to make the interface as tagged VLAN member under the /interface/bridge/vlan menu for the RSPAN.
/interface ethernet switch port
set ether2 mirror-egress=yes mirror-ingress=yes
/interface ethernet switch
set switch1 mirror-target=ether3 rspan=yes rspan-egress-vlan-id=999 rspan-ingress-vlan-id=999
Property Reference

Sub-menu: /interface/ethernet/switch
mirror-target (cpu | name | none; Default: none)	

Selects a single mirroring target port. Packets from mirror-egress and mirror-ingress (/interface/ethernet/switch/port) and mirror (/interface/ethernet/switch/rule) will be sent to the selected port.
rspan (no | yes; Default: no)	Enables Remote Switch Port Analyzer (RSPAN) feature on mirror-target. Traffic marked for ingress or egress mirroring is carried over a specified remote analyzer VLAN - rspan-egress-vlan-id and rspan-ingress-vlan-id.
rspan-egress-vlan-id (integer: 1..4095; Default: 1)	Selects the VLAN ID for marked egress traffic. Only applies when rspan is enabled.
rspan-ingress-vlan-id (integer: 1..4095; Default: 1)	Selects the VLAN ID for marked ingress traffic. Only applies when rspan is enabled.

Sub-menu: /interface/ethernet/switch/port
mirror-egress (no | yes; Default: no)	

Whether to send egress packet copy to the mirror-target port.
mirror-ingress (no | yes; Default: no)	

Whether to send ingress packet copy to the mirror-target port.

Sub-menu: /interface/ethernet/switch/rule
mirror (no | yes; Default: no)	Whether to send a packet copy to mirror-target port.
Traffic Shaping

It is possible to limit ingress traffic that matches certain parameters with ACL rules and it is possible to limit ingress/egress traffic per port basis. The policer is used for ingress traffic, the shaper is used for egress traffic. The ingress policer controls the received traffic with packet drops. Everything that exceeds the defined limit will get dropped. This can affect the TCP congestion control mechanism on end hosts and achieved bandwidth can be actually less than defined. The egress shaper tries to queue packets that exceed the limit instead of dropping them. Eventually, it will also drop packets when the output queue gets full, however, it should allow utilizing the defined throughput better.

Port-based traffic police and shaper:
/interface ethernet switch port
set ether1 ingress-rate=10M egress-rate=5M

MAC-based traffic policer:
/interface ethernet switch rule
add ports=ether1 switch=switch1 src-mac-address=64:D1:54:D9:27:E6/FF:FF:FF:FF:FF:FF rate=10M

VLAN-based traffic policer:
/interface bridge
set bridge1 vlan-filtering=yes
/interface ethernet switch rule
add ports=ether1 switch=switch1 vlan-id=11 rate=10M

By enabling vlan-filtering you will be filtering out traffic destined to the CPU, before enabling VLAN filtering you should make sure that you set up a Management port.

Protocol-based traffic policer:
/interface ethernet switch rule
add ports=ether1 switch=switch1 mac-protocol=ipx rate=10M

There are other options as well, check the ACL section to find out all possible parameters that can be used to match packets.

The Switch Rule table is used for QoS functionality, see this table on how many rules each device supports.

Due to hardware limitations, the egress-rate and storm-rate settings do not work correctly on 10Gbps switch ports when they are linked at 10/100Mbps, 1/2.5/5Gbps. This applies to 98DX224S, 98DX226S, 98DX2528, 98DX3236 switch chips.
Traffic Storm Control

Since RouterOS v6.42 it is possible to enable traffic storm control. A traffic storm can emerge when certain frames are continuously flooded on the network. Storm control settings is generally configured on non-uplink ports to restrict incoming storm traffic on those specific ports. This helps safeguard the entire switch and its connected ports by minimizing the impact of traffic storms across the network. 

For example, if a network loop has been created and no loop avoidance mechanisms are used (e.g. Spanning Tree Protocol), broadcast or multicast frames can quickly overwhelm the network, causing degraded network performance or even complete network breakdown. With CRS3xx, CRS5xx series switches and CCR2116, CCR2216 routers it is possible to limit broadcast, unknown multicast and unknown unicast traffic. Unknown unicast traffic is considered when a switch does not contain a host entry for the destined MAC address. Unknown multicast traffic is considered when a switch does not contain a multicast group entry in the /interface bridge mdb menu. Storm control settings should be applied to ingress ports, the egress traffic will be limited.

The storm control parameter is specified in percentage (%) of the link speed. If your link speed is 1Gbps, then specifying storm-rate as 10 will allow only 100Mbps of broadcast, unknown multicast and/or unknown unicast traffic to be forwarded.

Sub-menu: /interface ethernet switch port
limit-broadcasts (yes | no; Default: yes)	Limit broadcast traffic on a switch port.
limit-unknown-multicasts (yes | no; Default: no)	Limit unknown multicast traffic on a switch port.
limit-unknown-unicasts (yes | no; Default: no)	Limit unknown unicast traffic on a switch port.
storm-rate (integer 0..100; Default: 100)	Amount of broadcast, unknown multicast and/or unknown unicast traffic is limited to in percentage of the link speed.

Devices with 98DX224S, 98DX226S, 98DX2528, 98DX3236 switch chip cannot distinguish unknown multicast traffic from all multicast traffic. For example, CRS326-24G-2S+ will limit all multicast traffic when limit-unknown-multicasts and storm-rate is used. For other devices, for example, CRS317-1G-16S+ the limit-unknown-multicasts parameter will limit only unknown multicast traffic (addresses that are not present in /interface bridge mdb).

For example, to limit 1% (10Mbps) of broadcast and unknown unicast traffic on ether1 (1Gbps), use the following commands:
/interface ethernet switch port
set ether1 storm-rate=1 limit-broadcasts=yes limit-unknown-unicasts=yes

Due to hardware limitations, the egress-rate and storm-rate settings do not work correctly on 10Gbps switch ports when they are linked at 10/100Mbps, 1/2.5/5Gbps. This applies to 98DX224S, 98DX226S, 98DX2528, 98DX3236 switch chips.
MPLS hardware offloading

Since RouterOS v6.41 it is possible to offload certain MPLS functions to the switch chip, the switch must be a (P)rovider router in a PE-P-PE setup in order to achieve hardware offloading. A setup example can be found in the Basic MPLS setup example manual page. The hardware offloading will only take place when LDP interfaces are configured as physical switch interfaces (e.g. Ethernet, SFP, SFP+).

Currently only CRS317-1G-16S+ and CRS309-1G-8S+ using RouterOS v6.41 and newer are capable of hardware offloading certain MPLS functions. CRS317-1G-16S+ and CRS309-1G-8S+ built-in switch chip is not capable of popping MPLS labels from packets, in a PE-P-PE setup you either have to use explicit null or disable TTL propagation in MPLS network to achieve hardware offloading.

The MPLS hardware offloading has been removed since RouterOS v7.
Switch Rules (ACL)

Access Control List contains ingress policy and egress policy engines. See this table on how many rules each device supports. It is an advanced tool for wire-speed packet filtering, forwarding and modifying based on Layer2, Layer3 and Layer4 protocol header field conditions.

ACL rules are checked for each received packet until a match has been found. If there are multiple rules that can match, then only the first rule will be triggered. A rule without any action parameters is a rule to accept the packet.

It is not required to set mac-protocol to certain IP version when using L3 or L4 matchers, however, it is recommended to set the mac-protocol=ip or mac-protocol=ipv6  when filtering any IP packets.

When switch ACL rules are modified (e.g. added, removed, disabled, enabled, or moved), the existing switch rules will be inactive for a short time. This can cause some packet leakage during the ACL rule modifications.


Sub-menu: /interface ethernet switch rule
copy-to-cpu (no | yes; Default: no)	Clones the matching packet and sends it to the CPU.
disabled (yes | no; Default: no)	Enables or disables ACL entry.
dscp (0..63)	Matching the DSCP field of the packet (only applies to IPv4 packets).
dst-address (IP address/Mask)	Matching destination IPv4 address and mask, also matches the destination IP in ARP packets. 
dst-address6 (IPv6 address/Mask)	Matching destination IPv6 address and mask.
dst-mac-address (MAC address/Mask)	Matching destination MAC address and mask.
dst-port (0..65535)	Matching destination protocol port number (applies to IPv4 and IPv6 packets if mac-protocol is not specified).
flow-label (0..1048575)	Matching IPv6 flow label.
mac-protocol (802.2 | arp | capsman | dot1x | homeplug-av | ip | ipv6 | ipx | lacp | lldp | loop-protect | macsec | mpls-multicast | mpls-unicast | packing-compr | packing-simple | pppoe | pppoe-discovery | rarp | romon | service-vlan | vlan | or 0..65535 | or 0x0000-0xffff)	Matching particular MAC protocol specified by protocol name or number
mirror (no | yes)	Clones the matching packet and sends it to the mirror-target port.
new-dst-ports (ports | bond | all)	

Changes the destination port to the specified value:

    If the setting is left empty (e.g. new-dst-ports=""), the packet will be dropped;
    If a port or  hardware-offloaded bonding interface is specified, the packet will be redirected to that port. Only single port or bond interface is supported;
    if you use the all argument, packet will be allowed to pass through to the egress processing without being dropped;
    If this parameter is not used, the packet will be accepted as is.

new-vlan-id (0..4095)	Changes the VLAN ID to the specified value. Requires vlan-filtering=yes.
new-vlan-priority (0..7)	Changes the VLAN priority (priority code point). Requires vlan-filtering=yes.
ports (ports | bond)	Matching switch interfaces where the rule will apply to incoming traffic. Multiple ports and hardware-offloaded bonding interfaces can be selected. Note that the switch1-cpu port cannot be selected. If ports property is left empty, the rule will apply to all switch interfaces.
protocol (dccp | ddp | egp | encap | etherip | ggp | gre | hmp | icmp | icmpv6 | idpr-cmtp | igmp | ipencap | ipip | ipsec-ah | ipsec-esp | ipv6 | ipv6-frag | ipv6-nonxt | ipv6-opts | ipv6-route | iso-tp4 | l2tp | ospf | pim | pup | rdp | rspf | rsvp | sctp | st | tcp | udp | udp-lite | vmtp | vrrp | xns-idp | xtp | or 0..255)	Matching particular IP protocol specified by protocol name or number. Only applies to IPv4 packets if mac-protocol is not specified. To match certain IPv6 protocols, use the mac-protocol=ipv6 setting.
rate (0..4294967295)	Sets ingress traffic limitation (bits per second) for matched traffic.
redirect-to-cpu (no | yes)	Changes the destination port of a matching packet to the CPU.
src-address (IP address/Mask)	Matching source IPv4 address and mask, also matches the source IP in ARP packets. 
src-address6 (IPv6 address/Mask)	Matching source IPv6 address and mask.
src-mac-address (MAC address/Mask)	Matching source MAC address and mask.
src-port (0..65535)	Matching source protocol port number (applies to IPv4 and IPv6 packets if mac-protocol is not specified).
switch (switch group)	Matching switch group on which will the rule apply.
traffic-class (0..255)	Matching IPv6 traffic class.
vlan-id (0..4095)	Matching VLAN ID. Requires vlan-filtering=yes.
vlan-header (not-present | present)	Matching VLAN header, whether the VLAN header is present or not. Requires vlan-filtering=yes.
vlan-priority (0..7)	Matching VLAN priority (priority code point).

Action parameters:

    copy-to-cpu
    redirect-to-cpu
    mirror
    new-dst-ports (can be used to drop packets)
    new-vlan-id
    new-vlan-priority
    rate

Layer2 condition parameters:

    dst-mac-address
    mac-protocol
    src-mac-address
    vlan-id
    vlan-header
    vlan-priority

Layer3 condition parameters:

    dscp
    protocol
    IPv4 conditions:
        dst-address
        src-address
    IPv6 conditions:
        dst-address6
        flow-label
        src-address6
        traffic-class

Layer4 condition parameters:

    dst-port
    src-port


For VLAN related matchers or VLAN related action parameters to work, you need to enable vlan-filtering on the bridge interface and make sure that hardware offloading is enabled on those ports, otherwise, these parameters will not have any effect.

When bridge interface ether-type is set to 0x8100, then VLAN related ACL rules are relevant to frames tagged using regular/customer VLAN (TPID 0x8100), this includes vlan-id and new-vlan-id. When bridge interface ether-type is set to 0x88a8, then ACL rules are relevant to frames tagged with 802.1ad service tag (TPID 0x88a8).
Port Security

It is possible to limit allowed MAC addresses on a single switch port. For example, to allow 64:D1:54:81:EF:8E MAC address on a switch port, start by switching multiple ports together, in this example 64:D1:54:81:EF:8E is going to be located behind ether1. 

Create an ACL rule to allow the given MAC address and drop all other traffic on ether1 (for ingress traffic):
/interface ethernet switch rule
add ports=ether1 src-mac-address=64:D1:54:81:EF:8E/FF:FF:FF:FF:FF:FF switch=switch1
add new-dst-ports="" ports=ether1 switch=switch1

Switch all required ports together, disable MAC learning and disable unknown unicast flooding on ether1:
/interface bridge
add name=bridge1
/interface bridge port
add bridge=bridge1 interface=ether1 hw=yes learn=no unknown-unicast-flood=no
add bridge=bridge1 interface=ether2 hw=yes

Add a static hosts entry for 64:D1:54:81:EF:8E (for egress traffic):
/interface bridge host
add bridge=bridge1 interface=ether1 mac-address=64:D1:54:81:EF:8E

Broadcast traffic will still be sent out from ether1. To limit broadcast traffic flood on a bridge port, you can use the broadcast-flood parameter to toggle it. Do note that some protocols depend on broadcast traffic, such as streaming protocols and DHCP.
Dual Boot

The âdual bootâ feature allows you to choose which operating system you prefer to use on CRS3xx series switches, RouterOS or SwOS. Device operating system could be changed using:

    Command-line (/system routerboard settings set boot-os=swos)
    Winbox
    Webfig
    Serial Console

More details about SwOS are described here: SwOS manual
Configuring SwOS using RouterOS

Since RouterOS 6.43 it is possible to load, save and reset SwOS configuration, as well as upgrade SwOS and set an IP address for the CRS3xx series switches by using RouterOS.

    Save configuration with /system swos save-config

The configuration will be saved on the same device with swos.config as a filename, make sure you download the file from your device since the configuration file will be removed after a reboot.

    Load configuration with /system swos load-config
    Change password with /system swos password
    Reset configuration with /system swos reset-config
    Upgrade SwOS from RouterOS using /system swos upgrade

The upgrade command will automatically install the latest available SwOS primary backup version, make sure that your device has access to the Internet in order for the upgrade process to work properly. When the device is booted into SwOS, the version number will include the letter "p", indicating a primary backup version. You can then install the latest available SwOS secondary main version from the SwOS "Upgrade" menu.

Starting from RouterOS version 7.17 device-mode restricts SwOS/RouterOS transition for dual-boot; in order to enable: system/device-mode/update routerboard=yes
address-acquisition-mode (dhcp-only | dhcp-with-fallback | static; Default: dhcp-with-fallback)	Changes address acquisition method:

dhcp-only - uses only a DHCP client to acquire address

dhcp-with-fallback - for the first 10 seconds will try to acquire address using a DHCP client. If the request is unsuccessful, then address falls back to static as defined by static-ip-address property

static - address is set as defined by static-ip-address property
allow-from (IP/Mask; Default: 0.0.0.0/0)	IP address or a network from which the switch is accessible. By default, the switch is accessible by any IP address.
allow-from-ports (name; Default: )	List of switch ports from which the device is accessible. By default, all ports are allowed to access the switch
allow-from-vlan (integer: 0..4094; Default: 0)	VLAN ID from which the device is accessible. By default, all VLANs are allowed
identity (name; Default: Mikrotik)	Name of the switch (used for Mikrotik Neighbor Discovery protocol)
static-ip-address (IP; Default: 192.168.88.1)	IP address of the switch in case address-acquisition-mode is either set to dhcp-with-fallback or static. By setting a static IP address, the address acquisition process does not change, which is DHCP with fallback by default. This means that the configured static IP address will become active only when there is going to be no DHCP servers in the same broadcast domain
See also

CRS Router

CRS3xx VLANs with Bonds

Basic VLAN switching

Bridge Hardware Offloading

Route Hardware Offloading

Spanning Tree Protocol

MTU on RouterBOARD

Layer2 misconfiguration

Bridge VLAN Table

Bridge IGMP/MLD snooping

Multi-chassis Link Aggregation Group



    Creado por Edgars P., actualizado por Ãºltima vez el oct 04, 2024 28 min de lectura

    Summary
    Cloud Router Switch models
    Abbreviations and Explanations
    Port Switching
        Multiple switch groups
    Global Settings
    Port Settings
    Forwarding Databases
        Unicast FDB
        Multicast FDB
        Reserved FDB
    VLAN
        VLAN Table
        Egress VLAN Tag
        Ingress/Egress VLAN Translation
        Protocol Based VLAN
        MAC Based VLAN
        1:1 VLAN Switching
    Port Isolation/Leakage
    Trunking
    Quality of Service
        Shaper
        Ingress Port Policer
        QoS Group
        DSCP QoS Map
        DSCP To DSCP Map
        Policer QoS Map
    Access Control List
        ACL Policer
    See also

Summary

The Cloud Router Switch series are highly integrated switches with high-performance MIPS CPU and feature-rich packet processors. The CRS switches can be designed into various Ethernet applications including unmanaged switch, Layer 2 managed switch, carrier switch, and wireless/wired unified packet processing. See Cloud Router Switch configuration examples

This article applies to CRS1xx and CRS2xx series switches and not to CRS3xx series switches. For CRS3xx series devices, read the CRS3xx, CRS5xx series switches and CCR2116, CCR2216 routers manual.


Forwarding	

    Configurable ports for switching or routing
    Full non-blocking wire-speed switching
    Up to 16k MAC entries in Unicast FDB for Layer 2 unicast forwarding
    Up to 1k MAC entries in Multicast FDB for multicast forwarding
    Up to 256 MAC entries in Reserved FDB for control and management purposes
    All Forwarding Databases support IVL and SVL
    Configurable Port-based MAC learning limit
    Jumbo frame support (CRS1xx: 4064 Bytes; CRS2xx: 9204 Bytes)
    IGMP Snooping support

Mirroring	

    Various types of mirroring:
        Port-based mirroring
        VLAN-based mirroring
        MAC-based mirroring
    2 independent mirroring analyzer ports

VLAN	

    Fully compatible with IEEE802.1Q and IEEE802.1ad VLAN
    4k active VLANs
    Flexible VLAN assignment:
        Port-based VLAN
        Protocol-based VLAN
        MAC-based VLAN
    From any to any VLAN translation and swapping
    1:1 VLAN switching - VLAN to port mapping
    VLAN filtering

Port Isolation and Leakage	

    Applicable for Private VLAN implementation
    3 port profile types: Promiscuous, Isolated, and Community
    Up to 28 Community profiles
    Leakage profiles allow bypassing egress VLAN filtering

Trunking	

    Supports static link aggregation groups
    Up to 8 Port Trunk groups
    Up to 8 member ports per Port Trunk group
    Hardware automatic failover and load balancing

Quality of Service (QoS)	

    Flexible QoS classification and assignment:
        Port-based
        MAC-based
        VLAN-based
        Protocol-based
        PCP/DEI based
        DSCP based
        ACL based
    QoS remarking and remapping for QoS domain translation between a service provider and client networks
    Overriding of each QoS assignment according to the configured priority

Shaping and Scheduling	

    8 queues on each physical port
    Shaping per port, per queue, per queue group

Access Control List	

    Ingress and Egress ACL tables
    Up to 128 ACL rules (limited by RouterOS)
    Classification based on ports, L2, L3, L4 protocol header fields
    ACL actions include filtering, forwarding, and modifying the protocol header fields

Cloud Router Switch models

This table clarifies the main differences between Cloud Router Switch models.
Model	Switch Chip	CPU	Wireless	SFP+ port	Access Control List	Jumbo Frame (Bytes)
CRS105-5S-FB	QCA-8511	400MHz	-	-	+	9204
CRS106-1C-5S	QCA-8511	400MHz	-	-	+	9204
CRS112-8G-4S	QCA-8511	400MHz	-	-	+	9204
CRS210-8G-2S+	QCA-8519	400MHz	-	+	+	9204
CRS212-1G-10S-1S+	QCA-8519	400MHz	-	+	+	9204
CRS226-24G-2S+	QCA-8519	400MHz	-	+	+	9204
CRS125-24G-1S	QCA-8513L	600MHz	-	-	-	4064
CRS125-24G-1S-2HnD	QCA-8513L	600MHz	+	-	-	4064
CRS109-8G-1S-2HnD	QCA-8513L	600MHz	+	-	-	4064
Abbreviations and Explanations

CVID - Customer VLAN id: inner VLAN tag id of the IEEE 802.1ad frame

SVID - Service VLAN id: outer VLAN tag id of the IEEE 802.1ad frame

IVL - Independent VLAN learning - learning/lookup is based on both MAC addresses and VLAN IDs.

SVL - Shared VLAN learning - learning/lookup is based on MAC addresses - not on VLAN IDs.

TPID - Tag Protocol Identifier

PCP - Priority Code Point: a 3-bit field which refers to the IEEE 802.1p priority

DEI - Drop Eligible Indicator

DSCP - Differentiated services Code Point

Drop precedence - internal CRS switch QoS attribute used for packet enqueuing or dropping.
Port Switching

To set up port switching on CRS1xx/2xx series switches, check the Bridge Hardware Offloading page.

Dynamic reserved VLAN entries (VLAN4091; VLAN4090; VLAN4089; etc.) are created in the CRS switch when switched port groups are added when a hardware offloaded bridge is created. These VLANs are necessary for internal operation and have lower precedence than user-configured VLANs.
Multiple switch groups

The CRS1xx/2xx series switches allow you to use multiple bridges with hardware offloading, this allows you to easily isolate multiple switch groups. This can be done by simply creating multiple bridges and enabling hardware offloading.

Multiple hardware offloaded bridge configuration is designed as a fast and simple port isolation solution, but it limits a part of the VLAN functionality supported by the CRS switch chip. For advanced configurations use one bridge within the CRS switch chip for all ports, configure VLANs, and isolate port groups with port isolation profile configuration.


CRS1xx/2xx series switches can run multiple hardware offloaded bridges with (R)STP enabled, but it is not recommended since the device is not designed to run multiple (R)STP instances on a hardware level. To isolate multiple switch groups and have (R)STP enabled you should isolate port groups with port isolation profile configuration.
Global Settings

The CRS switch chip is configurable from the /interface ethernet switch console menu.

Sub-menu: /interface ethernet switch
name (string value; Default: switch1)	Name of the switch.
bridge-type (customer-vid-used-as-lookup-vid | service-vid-used-as-lookup-vid; Default: customer-vid-used-as-lookup-vid)	The bridge type defines which VLAN tag is used as Lookup-VID. Lookup-VID serves as the VLAN key for all VLAN-based lookups.
mac-level-isolation (yes | no; Default: yes)	Globally enables or disables MAC level isolation. Once enabled, the switch will check the source and destination MAC address entries and their isolation-profile from the unicast forwarding table. By default, the switch will learn MAC addresses and place them into a promiscuous isolation profile. Other isolation profiles can be used when creating static unicast entries. If the source or destination MAC address is located on a promiscuous isolation profile, the packet is forwarded. If both source and destination MAC addresses are located on the same community1 or community2 isolation profile, the packet is forwarded. The packet is dropped when the source and destination MAC address isolation profile is isolated, or when the source and destination MAC address isolation profiles are from different communities (e.g. source MAC address is community1 and destination MAC address is community2). When MAC level isolation is globally disabled, the isolation is bypassed.
use-svid-in-one2one-vlan-lookup (yes | no; Default: no)	Whether to use service VLAN ID for 1:1 VLAN switching lookup.
use-cvid-in-one2one-vlan-lookup (yes | no; Default: yes)	Whether to use customer VLAN ID for 1:1 VLAN switching lookup.
multicast-lookup-mode

(dst-ip-and-vid-for-ipv4 | dst-mac-and-vid-always;
Default:dst-ip-and-vid-for-ipv4)	Lookup mode for IPv4 multicast bridging.

    dst-mac-and-vid-always - For all packet types lookup key is the destination MAC and VLAN ID.
    dst-ip-and-vid-for-ipv4 - For IPv4 packets lookup key is the destination IP and VLAN ID. For other packet types, the lookup key is the destination MAC and VLAN ID.

unicast-fdb-timeout (time interval; Default: 5m)	Timeout for Unicast FDB entries.
override-existing-when-ufdb-full (yes | no; Default: no)	Enable or disable to override existing entry which has the lowest aging value when UFDB is full.


drop-if-no-vlan-assignment-on-ports (ports; Default: none)	Ports which drop frames if no MAC-based, Protocol-based VLAN assignment or Ingress VLAN Translation is applied.
drop-if-invalid-or-src-port-
-not-member-of-vlan-on-ports
(ports; Default: none)	Ports that drop invalid and other port VLAN ID frames.
unknown-vlan-lookup-mode (ivl | svl; Default: svl)	Lookup and learning mode for packets with invalid VLAN.
forward-unknown-vlan (yes | no; Default: yes)	Whether to allow forwarding VLANs that are not members of the VLAN table.


bypass-vlan-ingress-filter-for (protocols; Default: none)	Protocols that are excluded from Ingress VLAN filtering. These protocols are not dropped if they have invalid VLAN. (arp, dhcpv4, dhcpv6,
eapol, igmp, mld, nd, pppoe-discovery, ripv1)
bypass-ingress-port-policing-for (protocols; Default: none)	Protocols that are excluded from Ingress Port Policing. (arp, dhcpv4, dhcpv6, eapol, igmp, mld, nd, pppoe-discovery, ripv1)
bypass-l2-security-check-filter-for (protocols; Default: none)	Protocols that are excluded from Policy rule security check. (arp, dhcpv4, dhcpv6, eapol, igmp, mld, nd, pppoe-discovery, ripv1)


ingress-mirror0 (port | trunk,format; Default: none,modified)	The first ingress mirroring analyzer port or trunk and mirroring format:

    analyzer-configured - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the analyzer port.
    modified - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the egress port.
    original - Traffic is mirrored without any change to the original incoming packet format. But the service VLAN tag is stripped in the edge port.

ingress-mirror1 (port | trunk,format; Default: none,modified)	The second ingress mirroring analyzer port or trunk and mirroring format:

    analyzer-configured - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the analyzer port.
    modified - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the egress port.
    original - Traffic is mirrored without any change to the original incoming packet format. But the service VLAN tag is stripped in the edge port.

ingress-mirror-ratio (1/32768..1/1; Default: 1/1)	The proportion of ingress mirrored packets compared to all packets.
egress-mirror0 (port | trunk,format; Default: none,modified)	The first egress mirroring analyzer port or trunk and mirroring format:

    analyzer-configured - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the analyzer port.
    modified - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the egress port.
    original - Traffic is mirrored without any change to the original incoming packet format. But the service VLAN tag is stripped in the edge port.

egress-mirror1 (port | trunk,format; Default: none,modified)	The second egress mirroring analyzer port or trunk and mirroring format:

    analyzer-configured - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the analyzer port.
    modified - The packet is the same as the packet to the destination. VLAN format is modified based on the VLAN configurations of the egress port.
    original - Traffic is mirrored without any change to the original incoming packet format. But the service VLAN tag is stripped in the edge port.

egress-mirror-ratio (1/32768..1/1; Default: 1/1)	Proportion of egress mirrored packets compared to all packets.
mirror-egress-if-ingress-mirrored (yes | no; Default: no)	When a packet is applied to both ingress and egress mirroring, only ingress mirroring is performed on the packet, if this setting is disabled. If this
setting is enabled both mirroring types are applied.
mirror-tx-on-mirror-port (yes | no; Default: no)	
mirrored-packet-qos-priority (0..7; Default: 0)	Remarked priority in mirrored packets.
mirrored-packet-drop-precedence (drop | green | red | yellow; Default: green)	Remarked drop precedence in mirrored packets. This QoS attribute is used for mirrored packet enqueuing or dropping.
fdb-uses (mirror0 | mirror1; Default: mirror0)	Analyzer port used for FDB-based mirroring.
vlan-uses (mirror0 | mirror1; Default: mirror0)	Analyzer port used for VLAN-based mirroring.
Port Settings

Sub-menu: /interface ethernet switch port
vlan-type (edge-port | network-port; Default: network-port)	Port VLAN type specifies whether VLAN ID is used in UFDB learning. The network port learns VLAN ID in UFDB, edge port does not - VLAN 0. It can be observed only in IVL learning mode.
isolation-leakage-profile-override (yes | no; Default:

!isolation-leakage-profile-override)
isolation-leakage-profile (0..31;)	Custom port profile for port isolation/leakage configurations.

    Port-level isolation profile 0. Uplink port - allows the port to communicate with all ports in the device.
    Port-level isolation profile 1. Isolated port - allows the port to communicate only with uplink ports.
    Port-level isolation profile 2 - 31. Community port - allows communication among the same community ports and uplink ports.

learn-override (yes | no; Default: !learn-override)
learn-limit (1..1023; Default: !learn-limit)	Enable or disable MAC address learning and set the MAC limit on the port. MAC learning limit is disabled by default when !learn-override and !learn-limit are set. Property learn-override is replaced with learn under /interface bridge port menu since RouterOS v6.42.
drop-when-ufdb-entry-src-drop (yes | no; Default: yes)	Enable or disable to drop packets when UFDB entry has action src-drop.
allow-unicast-loopback (yes | no; Default: no)	Unicast loopback on port. When enabled, it permits sending back when the source port and destination port are the same for known unicast packets.
allow-multicast-loopback (yes | no; Default: no)	Multicast loopback on port. When enabled, it permits sending back when the source port and destination port are the same for registered multicast or broadcast packets.
action-on-static-station-move (copy-to-cpu | drop | forward | redirect-to-cpu; Default: forward)	Action for packets when UFDB already contains a static entry with such MAC but with a different port.
drop-dynamic-mac-move (yes | no; Default: no)	Prevents MAC relearning until UFDB timeout if MAC is already learned on another port.


allow-fdb-based-vlan-translate (yes | no; Default: no)	Enable or disable MAC-based VLAN translation on the port.
allow-mac-based-service-vlan-assignment-for (all-frames | none |

tagged-frame-only | untagged-and-priority-tagged-frame-only; Default:
none)	Frame type for which applies MAC-based service VLAN translation.
allow-mac-based-customer-vlan-assignment-for (all-frames | none |

tagged-frame-only | untagged-and-priority-tagged-frame-only; Default:
none)	Frame type for which applies MAC-based customer VLAN translation.
default-customer-pcp (0..7; Default: 0)	Default customer PCP of the port.
default-service-pcp (0..7; Default: 0)	Default service PCP of the port.
pcp-propagation-for-initial-pcp (yes | no; Default: no)	Enables or disables PCP propagation for initial PCP assignment on ingress.

    If the port vlan-type is Edge port, the service PCP is copied from the customer PCP.
    If the port vlan-type is a Network port, the customer PCP is copied from the service PCP.

filter-untagged-frame (yes | no; Default: no)	Whether to filter untagged frames on the port.
filter-priority-tagged-frame (yes | no; Default: no)	Whether to filter tagged frames with priority on the port.
filter-tagged-frame (yes | no; Default: no)	Whether to filter tagged frames on the port.


egress-vlan-tag-table-lookup-key (according-to-bridge-type | egress-vid; Default: egress-vid)	Egress VLAN table (VLAN Tagging) lookup:

    egress-vid - Lookup VLAN ID is CVID when Edge port is configured, SVID when Network port is configured.
    according-to-bridge-type - Lookup VLAN ID is CVID when customer VLAN bridge is configured, SVID when service VLAN bridge is configured. The Customer tag is unmodified for Edge port in service VLAN bridge.

egress-vlan-mode (tagged | unmodified | untagged; Default: unmodified)	Egress VLAN tagging action on the port.
egress-pcp-propagation (yes | no; Default: no)	Enables or disables egress PCP propagation.

    If the port vlan-type is Edge port, the service PCP is copied from the customer PCP.
    If the port vlan-type is Network port, the customer PCP is copied from the service PCP.


ingress-mirror-to (mirror0 | mirror1 | none; Default: none)	Analyzer port for port-based ingress mirroring.
ingress-mirroring-according-to-vlan (yes | no; Default: no)	
egress-mirror-to (mirror0 | mirror1 | none; Default: none)	Analyzer port for port-based egress mirroring.


qos-scheme-precedence (da-based | dscp-based | ingress-acl-based | pcp-based | protocol-based | sa-based | vlan-based; Default: pcp-based, sa-based, da-based, dscp-based, protocol-based, vlan-based)	Specifies applied QoS assignment schemes on the ingress of the port.

    da-based
    dscp-based
    ingress-acl-based
    pcp-based
    protocol-based
    sa-based
    vlan-based

pcp-or-dscp-based-qos-change-dei (yes | no; Default: no)	Enable or disable PCP or DSCP based DEI change on port.
pcp-or-dscp-based-qos-change-pcp (yes | no; Default: no)	Enable or disable PCP or DSCP based PCP change on port.
pcp-or-dscp-based-qos-change-dscp (yes | no; Default: no)	Enable or disable PCP or DSCP based DSCP change on port.
dscp-based-qos-dscp-to-dscp-mapping (yes | no; Default: yes)	Enable or disable DSCP to internal DSCP mapping on port.
pcp-based-qos-drop-precedence-mapping (PCP/DEI-range:drop-precedence; Default: 0-15:green)	The new value of drop precedence for the PCP/DEI to drop precedence (drop | green | red | yellow) mapping. Multiple mappings are allowed separated by a comma e.g. "0-7:yellow,8-15:red".
pcp-based-qos-dscp-mapping (PCP/DEI-range:DEI; Default: 0-15:0)	The new value of DSCP for the PCP/DEI to DSCP (0..63) mapping. Multiple mappings are allowed separated by a comma e.g. "0-7:25,8-15:50".
pcp-based-qos-dei-mapping (PCP/DEI-range:DEI; Default: 0-15:0)	The new value of DEI for the PCP/DEI to DEI (0..1) mapping. Multiple mappings are allowed separated by a comma e.g. "0-7:0,8-15:1".
pcp-based-qos-pcp-mapping (PCP/DEI-range:DEI; Default: 0-15:0)	The new value of PCP for the PCP/DEI to PCP (0..7) mapping. Multiple mappings are allowed separated by a comma e.g. "0-7:3,8-15:4".
pcp-based-qos-priority-mapping (PCP/DEI-range:DEI; Default: 0-15:0)	The new value of internal priority for the PCP/DEI to priority (0..15) mapping. Multiple mappings are allowed separated by a comma e.g. "0-7:5,8-15:15".


priority-to-queue (priority-range:queue; Default: 0-15:0,1:1,2:2,3:3)	Internal priority (0..15) mapping to queue (0..7) per port.
per-queue-scheduling (Scheduling-type:Weight;

Default: wrr-group0:1,wrr-group0:2,wrr-group0:4,wrr-group0:8,wrr-group0:16,wrr-group0:32,
wrr-group0:64,wrr-group0:128)	Set port to use either strict or weighted round robin policy for traffic shaping for each queue group, each queue is separated by a comma.


ingress-customer-tpid-override (yes | no;

Default:!ingress-customer-tpid-override)
ingress-customer-tpid (0..10000; Default: 0x8100)	Ingress customer TPID override allows accepting specific frames with a custom customer tag TPID. The default value is for the tag of 802.1Q frames.
egress-customer-tpid-override (yes | no; Default:

!egress-customer-tpid-override)
egress-customer-tpid (0..10000; Default:
0x8100)	Egress customer TPID override allows custom identification for egress frames with a customer tag. The default value is for the tag of 802.1Q frames.
ingress-service-tpid-override (yes | no; Default:

!ingress-service-tpid-override)
ingress-service-tpid (0..10000; Default: 0x88A8)	Ingress service TPID override allows accepting specific frames with a custom service tag TPID. The default value is for the service tag of 802.1AD frames.
egress-service-tpid-override (yes | no; Default:

!egress-service-tpid-override)
egress-service-tpid (0..10000; Default:
0x88A8)	Egress service TPID override allows custom identification for egress frames with a service tag. The default value is for the service tag of 802.1AD frames.


custom-drop-counter-includes (counters; Default: none)	Custom include to count dropped packets for switch port custom-drop-packet counter.

    device-loopback
    fdb-hash-violation
    exceeded-port-learn-limitation
    dynamic-station-move
    static-station-move
    ufdb-source-drop
    host-source-drop
    unknown-host
    ingress-vlan-filtered

queue-custom-drop-counter0-includes (counters; Default: none)	Custom include to count dropped packets for switch port tx-queue-custom0-drop-packet

and bytes for tx-queue-custom0-drop-byte counters.

    red
    yellow
    green
    queue0
    ...
    queue7

queue-custom-drop-counter1-includes (counters; Default: none)	Custom include to count dropped packets for switch port tx-queue-custom1-drop-packet

and bytes for tx-queue-custom1-drop-byte counters.

    red
    yellow
    green
    queue0
    ...
    queue7

policy-drop-counter-includes (counters; Default: none)	Custom include to count dropped packets for switch port policy-drop-packet counter.

    ingress-policing
    ingress-acl
    egress-policing
    egress-acl

Forwarding Databases
Unicast FDB

The unicast forwarding database supports up to 16318 MAC entries.

Sub-menu: /interface ethernet switch unicast-fdb
action (action; Default: forward)	Action for UFDB entry:

    dst-drop - Packets are dropped when their destination MAC matches the entry.
    dst-redirect-to-cpu - Packets are redirected to the CPU when their destination MAC matches the entry.
    forward - Packets are forwarded.
    src-and-dst-drop - Packets are dropped when their source MAC or destination MAC matches the entry.
    src-and-dst-redirect-to-cpu - Packets are redirected to CPU when their source MAC or destination MAC matches the entry.
    src-drop - Packets are dropped when their source MAC matches the entry.
    src-redirect-to-cpu - Packets are redirected to the CPU when their source MAC matches the entry.

disabled (yes | no; Default: no)	Enables or disables Unicast FDB entry.
isolation-profile (community1 | community2 | isolated | promiscuous; Default: promiscuous)	MAC level isolation profile.
mac-address (MAC address)	The action command applies to the packet when the destination MAC or source MAC matches the entry.
mirror (yes | no; Default: no)	Enables or disables mirroring based on source MAC or destination MAC.
port (port)	Matching port for the Unicast FDB entry.
qos-group (none; Default: none)	Defined QoS group from QoS group menu.
svl (yes | no; Default: no)	Unicast FDB learning mode:

    Shared VLAN Learning (svl) - learning/lookup is based on MAC addresses - not on VLAN IDs.
    Independent VLAN Learning (ivl) - learning/lookup is based on both MAC addresses and VLAN IDs.

vlan-id (0..4095)	Unicast FDB lookup/learning VLAN id.
Multicast FDB

CRS125 switch-chip supports up to 1024 entries in MFDB for multicast forwarding. For each multicast packet, destination MAC or destination IP lookup is performed in MFDB. MFDB entries are not automatically learned and can only be configured.

Sub-menu: /interface ethernet switch multicast-fdb
address (X.X.X.X | XX:XX:XX:XX:XX:XX)	Matching IP address or MAC address for multicast packets.
bypass-vlan-filter (yes | no; Default: no)	Allow to bypass VLAN filtering for matching multicast packets.
disabled (yes | no; Default: no)	Enables or disables Multicast FDB entry.
ports (ports)	Member ports for multicast traffic.
qos-group (none; Default: none)	Defined QoS group from QoS group menu.
svl (yes | no; Default: no)	Multicast FDB learning mode:

    Shared VLAN Learning (svl) - learning/lookup is based on MAC addresses - not on VLAN IDs.
    Independent VLAN Learning (ivl) - learning/lookup is based on both MAC addresses and VLAN IDs.

vlan-id (0..4095; Default: 0)	Multicast FDB lookup VLAN ID. If the VLAN learning mode is IVL, VLAN id is lookup id, otherwise VLAN id = 0.
Reserved FDB

Cloud Router Switch supports 256 RFDB entries. Each RFDB entry can store either Layer2 unicast or multicast MAC address with specific commands.

Sub-menu: /interface ethernet switch reserved-fdb
action (copy-to-cpu | drop | forward | redirect-to-cpu; Default: forward)	Action for RFDB entry:

    copy-to-cpu - Packets are copied to the CPU when their destination MAC matches the entry.
    drop - Packets are dropped when their destination MAC matches the entry.
    forward - Packets are forwarded when their destination MAC matches the entry.
    redirect-to-cpu - Packets are redirected to CPU when their destination MAC matches the entry.

bypass-ingress-port-policing (yes | no; Default: no)	Allow to bypass Ingress Port Policer for matching packets.
bypass-ingress-vlan-filter (yes | no; Default: no)	Allow to bypass VLAN filtering for matching packets.
disabled (yes | no; Default: no)	Enables or disables Reserved FDB entry.
mac-address (MAC address; Default: 00:00:00:00:00:00)	Matching MAC address for Reserved FDB entry.
qos-group (none; Default: none)	Defined QoS group from QoS group menu.
VLAN
VLAN Table

The VLAN table supports 4096 VLAN entries for storing VLAN member information as well as other VLAN information such as QoS, isolation, forced VLAN, learning, and mirroring.

Sub-menu: /interface ethernet switch vlan
disabled (yes | no; Default: no)	Indicate whether the VLAN entry is disabled. Only enabled entry is applied to the lookup process and forwarding decision.
flood (yes | no; Default: no)	Enables or disables forced VLAN flooding per VLAN. If the feature is

enabled, the result of the destination MAC lookup in the UFDB or MFDB is ignored,
and the packet is forced to flood in the VLAN.
ingress-mirror (yes | no; Default: no)	Enable the ingress mirror per VLAN to support the VLAN-based mirror function.
learn (yes | no; Default: yes)	Enables or disables source MAC learning for VLAN.
ports (ports)	Member ports of the VLAN.
qos-group (none; Default: none)	Defined QoS group from QoS group menu.
svl (yes | no; Default: no)	FDB lookup mode for lookup in UFDB and MFDB.

    Shared VLAN Learning (svl) - learning/lookup is based on MAC addresses - not on VLAN IDs.
    Independent VLAN Learning (ivl) - learning/lookup is based on both MAC addresses and VLAN IDs.

vlan-id (0..4095)	VLAN ID of the VLAN member entry.
Egress VLAN Tag

Egress packets can be assigned different VLAN tag formats. The VLAN tags can be removed, added, or remained as is when the packet is sent to the egress port (destination port). Each port has dedicated control of the egress VLAN tag format. The tag formats include:

    Untagged
    Tagged
    Unmodified

The Egress VLAN Tag table includes 4096 entries for VLAN tagging selection.

Sub-menu: /interface ethernet switch egress-vlan-tag
disabled (yes | no; Default: no)	Enables or disables Egress VLAN Tag table entry.
tagged-ports (ports)	Ports that are tagged in egress.
vlan-id (0..4095)	VLAN ID which is tagged in egress.
Ingress/Egress VLAN Translation

The Ingress VLAN Translation table allows for up to 15 entries for each port. One or multiple fields can be selected from the packet header for lookup in the Ingress VLAN Translation table. The S-VLAN or C-VLAN or both configured in the first matched entry are assigned to the packet.

Sub-menu: /interface ethernet switch ingress-vlan-translation

Sub-menu: /interface ethernet switch egress-vlan-translation
customer-dei (0..1; Default: none)	Matching DEI of the customer tag.
customer-pcp (0..7; Default: none)	Matching PCP of the customer tag.
customer-vid (0..4095; Default: none)	Matching the VLAN ID of the customer tag.
customer-vlan-format (any | priority-tagged-or-tagged | tagged | untagged-or-tagged; Default:any)	Type of frames with customer tag for which VLAN translation rule is valid.
disabled (yes | no; Default: no)	Enables or disables VLAN translation entry.
new-customer-vid (0..4095; Default: none)	The new customer VLAN ID replaces the matching customer VLAN ID. If set to 4095 and ingress VLAN translation is used, then traffic is dropped.
new-service-vid (0..4095; Default: none)	The new service VLAN ID replaces the matching service VLAN ID.
pcp-propagation (yes | no; Default: no)	Enables or disables PCP propagation.

    If the port type is Edge, the customer PCP is copied from the service PCP.
    If the port type is Network, the service PCP is copied from the customer PCP.

ports (ports)	Matching switch ports for VLAN translation rule.
protocol (protocols; Default: none)	Matching Ethernet protocol. (only for Ingress VLAN Translation)
sa-learning (yes | no; Default: no)	Enables or disables source MAC learning after VLAN translation. (only for Ingress VLAN Translation)
service-dei (0..1; Default: none)	Matching DEI of the service tag.
service-pcp (0..7; Default: none)	Matching PCP of the service tag.
service-vid (0..4095; Default: none)	Matching VLAN ID of the service tag.
service-vlan-format (any | priority-tagged-or-tagged | tagged | untagged-or-tagged; Default:any)	Type of frames with service tag for which VLAN translation rule is valid.

Below is a table of traffic that triggers a rule that has a certain VLAN format set, note that traffic that is tagged with VLAN ID 0 is a special case that is also taken into account.
any	Accepts:

    Untagged traffic
    Tagged traffic
    Tagged traffic with priority set
    VLAN 0 traffic
    VLAN 0 traffic with priority set

priority-tagged-or-tagged	Accepts:

    Tagged traffic
    Tagged traffic with priority set
    VLAN 0 traffic
    VLAN 0 traffic with priority set

tagged	Accepts:

    Tagged traffic
    Tagged traffic with priority set

untagged-or-tagged	Accepts:

    Untagged traffic
    Tagged traffic
    Tagged traffic with priority set

If VLAN-format is set to any, then customer-vid/service-vid set to 0 will trigger the switch rule with VLAN 0 traffic. In this case, the switch rule will be looking for untagged traffic or traffic with a VLAN 0 tag, and only untagged-or-tagged will filter out VLAN 0 traffic in this case.
Protocol Based VLAN

Protocol Based VLAN table is used to assign VID and QoS attributes to related protocol packets per port.

Sub-menu: /interface ethernet switch protocol-based-vlan
disabled (yes | no; Default: no)	Enables or disables Protocol Based VLAN entry.
frame-type (ethernet | llc | rfc-1042; Default: ethernet)	Encapsulation type of the matching frames.
new-customer-vid (0..4095; Default: 0)	The new customer VLAN ID replaces the original customer VLAN ID for the specified protocol. If set to 4095, then traffic is dropped.
new-service-vid (0..4095; Default: 0)	The new service VLAN ID replaces the original service VLAN ID for the specified protocol.
ports (ports)	Matching switch ports for Protocol-based VLAN rule.
protocol (protocol; Default: 0)	Matching protocol for Protocol-based VLAN rule.
qos-group (none; Default: none)	Defined QoS group from QoS group menu.
set-customer-vid-for (all | none | tagged | untagged-or-priority-tagged; Default: all)	Customer VLAN ID assignment command for different packet types.
set-qos-for (all | none | tagged | untagged-or-priority-tagged; Default: none)	Frame type for which QoS assignment command applies.
set-service-vid-for (all | none | tagged | untagged-or-priority-tagged; Default: all)	Service VLAN ID assignment command for different packet types.
MAC Based VLAN

MAC Based VLAN table is used to assign VLAN based on the source MAC.

Sub-menu: /interface ethernet switch mac-based-vlan
disabled (yes | no; Default: no)	Enables or disables MAC Based VLAN entry.
new-customer-vid (0..4095; Default: 0)	The new customer VLAN ID replaces the original service VLAN ID for matched packets. If set to 4095, then traffic is dropped.
new-service-vid (0..4095; Default: 0)	The new service VLAN ID replaces the original service VLAN ID for matched packets.
src-mac-address (MAC address)	Matching source MAC address for MAC based VLAN rule.


All CRS1xx/2xx series switches support up to 1024 MAC Based VLAN table entries.
1:1 VLAN Switching

1:1 VLAN switching can be used to replace the regular L2 bridging for matched packets. When a packet hits a 1:1 VLAN switching table entry, the destination port information in the entry is assigned to the packet. The matched destination information in the UFDB and MFDB entry no longer applies to the packet.

Sub-menu: /interface ethernet switch one2one-vlan-switching
customer-vid (0..4095; Default: 0)	Matching customer VLAN id for 1:1 VLAN switching.
disabled (yes | no; Default: no)	Enables or disables 1:1 VLAN switching table entry.
dst-port (port)	Destination port for matched 1:1 VLAN switching packets.
service-vid (0..4095; Default: 0)	Matching customer VLAN id for 1:1 VLAN switching.
Port Isolation/Leakage

The CRS switches support flexible multi-level isolation features, which can be used for user access control, traffic engineering and advanced security and network management. The isolation features provide an organized fabric structure allowing user to easily program and control the access by port, MAC address, VLAN, protocol, flow, and frame type. The following isolation and leakage features are supported:

    Port-level isolation
    MAC-level isolation
    VLAN-level isolation
    Protocol-level isolation
    Flow-level isolation
    Free combination of the above

Port-level isolation supports different control schemes on the source port and destination port. Each entry can be programmed with access control for either the source port or the destination port.

    When the entry is programmed with source port access control, the entry is

applied to the ingress packets.

    When the entry is programmed with destination port access control, the entry

is applied to the egress packets.

Port leakage allows bypassing egress VLAN filtering on the port. A leaky port is allowed to access other ports for various applications such as security, network control, and management. Note: When both isolation and leakage are applied to the same port, the port is isolated.

Sub-menu: /interface ethernet switch port-isolation

Sub-menu: /interface ethernet switch port-leakage
disabled (yes | no; Default: no)	Enables or disables port isolation/leakage entry.
flow-id (0..63; Default: none)	
forwarding-type (bridged; routed; Default: bridged,routed)	Matching traffic forwarding type on Cloud Router Switch.
mac-profile (community1 | community2 | isolated | promiscuous; Default: none)	Matching MAC isolation/leakage profile.
port-profile (0..31; Default: none)	Matching Port isolation/leakage profile.
ports (ports; Default: none)	Isolated/leaked ports.
protocol-type (arp; nd; dhcpv4; dhcpv6; ripv1; Default: arp,nd,dhcpv4,dhcpv6,ripv1)	Included protocols for isolation/leakage.
registration-status (known; unknown; Default: known,unknown)	Registration status for matching packets. Known are present in UFDB and MFDB, and unknown are not.
traffic-type (unicast; multicast; broadcast; Default: unicast,multicast,broadcast)	Matching traffic type.
type (dst | src; Default: src)	Lookup type of the isolation/leakage entry:

    src - Entry applies to ingress packets of the ports.
    dst - Entry applies to egress packets of the ports.

vlan-profile (community1 | community2 | isolated | promiscuous; Default: none)	Matching VLAN isolation/leakage profile.
Trunking

The Trunking in the Cloud Router Switches provides static link aggregation groups with hardware automatic failover and load balancing. IEEE802.3ad and IEEE802.1ax compatible Link Aggregation Control Protocol is not supported. Up to 8 Trunk groups are supported with up to 8 Trunk member ports per Trunk group. CRS Port Trunking calculates transmit-hash based on all following parameters: L2 src-dst MAC + L3 src-dst IP + L4 src-dst Port.

Sub-menu: /interface ethernet switch trunk
disabled (yes | no; Default: no)	Enables or disables port trunking entry.
member-ports (ports)	Member ports of the Trunk group.
name (string value; Default: trunkX)	Name of the Trunk group.
Quality of Service
Shaper

Traffic shaping restricts the rate and burst size of the flow which is transmitted out from the interface. The shaper is implemented by a token bucket. If the packet exceeds the maximum rate or the burst size, which means not enough token for the packet, the packet is stored to buffer until there is enough token to transmit it.

Sub-menu: /interface ethernet switch shaper
burst (integer; Default: 100k)	Maximum data rate which can be transmitted while the burst is allowed.
disabled (yes | no; Default: no)	Enables or disables traffic shaper entry.
meter-unit (bit | packet; Default: bit)	Measuring units for traffic shaper rate.
port (port)	Physical port for traffic shaper.
rate (integer; Default: 1M)	Maximum data rate limit.
target (port | queueX | wrr-groupX; Default: port)	Three levels of shapers are supported on each port (including CPU port):

    Port level - Entry applies to the port of the switch-chip.
    WRR group level - Entry applies to one of the 2 Weighted Round Robin queue groups (wrr-group0, wrr-group1) on the port.
    Queue level - Entry applies to one of the 8 queues (queue0 - queue7) on the port.

Ingress Port Policer

Sub-menu: /interface ethernet switch ingress-port-policer
burst (integer; Default: 100k)	Maximum data rate which can be transmitted while the burst is allowed.
disabled (yes | no; Default: no)	Enables or disables ingress port policer entry.
meter-len (layer-1 | layer-2 | layer-3; Default: layer-1)	Packet classification which sets the packet byte length for metering.

    layer-1 - includes entire layer-2 frame + FCS + inter-packet gap + preamble.
    layer-2 - includes layer-2 frame + FCS.
    layer-3 - includes only layer-3 + ethernet padding without layer-2 header and FCS.

meter-unit (bit | packet; Default: bit)	Measuring units for traffic ingress port policer rate.
new-dei-for-yellow (0..1 | remap; Default: none)	Remarked DEI for exceeded traffic if yellow-action is remark.
new-dscp-for-yellow (0..63 | remap; Default: none)	Remarked DSCP for exceeded traffic if yellow-action is remark.
new-pcp-for-yellow (0..7 | remap; Default: none)	Remarked PCP for exceeded traffic if yellow-action is remark.
packet-types (packet-types; Default: all types from description)	Matching packet types for which ingress port policer entry is valid.
port (port)	Physical port or trunk for ingress port policer entry.
rate (integer)	Maximum data rate limit.
yellow-action (drop | forward | remark; Default: drop)	Performed action for exceeded traffic.
QoS Group

The global QoS group table is used for VLAN-based, Protocol-based, and MAC-based QoS group assignment configuration.

Sub-menu: /interface ethernet switch qos-group
dei (0..1; Default: none)	The new value of DEI for the QoS group.
disabled (yes | no; Default: no)	Enables or disables protocol QoS group entry.
drop-precedence (drop | green | red | yellow; Default: green)	Drop precedence is an internal QoS attribute used for packet enqueuing or dropping.
dscp (0..63; Default: none)	The new value of DSCP for the QoS group.
name (string value; Default: groupX)	Name of the QoS group.
pcp (0..7; Default: none)	The new value of PCP for the QoS group.
priority (0..15; Default: 0)	Internal priority is a local significance of priority for classifying traffic to different egress queues on a port. (1 is highest, 15 is lowest)
DSCP QoS Map

The global DSCP to QOS mapping table is used for mapping from the DSCP of the packet to new QoS attributes configured in the table.

Sub-menu: /interface ethernet switch dscp-qos-map
dei (0..1)	The new value of DEI for the DSCP to QOS mapping entry.
drop-precedence (drop | green | red | yellow)	The new value of Drop precedence for the DSCP to QOS mapping entry.
pcp (0..7)	The new value of PCP for the DSCP to QOS mapping entry.
priority (0..15)	The new value of internal priority for the DSCP to QOS mapping entry.
DSCP To DSCP Map

The global DSCP to DSCP mapping table is used for mapping from the packet's original DSCP to the new DSCP value configured in the table.

Sub-menu: /interface ethernet switch dscp-to-dscp
new-dscp (0..63)	The new value of DSCP for the DSCP to DSCP mapping entry.
Policer QoS Map

Sub-menu: /interface ethernet switch policer-qos-map
dei-for-red (0..1; Default: 0)	Policer DEI remapping value for red packets.
dei-for-yellow (0..1; Default: 0)	Policer DEI remapping value for yellow packets.
dscp-for-red (0..63; Default: 0)	Policer DSCP remapping value for red packets.
dscp-for-yellow (0..63; Default: 0)	Policer DSCP remapping value for yellow packets.
pcp-for-red (0..7; Default: 0)	Policer PCP remapping value for red packets.
pcp-for-yellow (0..7; Default: 0)	Policer PCP remapping value for yellow packets.
Access Control List

Access Control List contains of ingress policy and egress policy engines and allows configuration of up to 128 policy rules (limited by RouterOS). It is an advanced tool for wire-speed packet filtering, forwarding, shaping, and modifying based on Layer2, Layer3, and Layer4 protocol header field conditions.

See the Summary section for Access Control List supported Cloud Router Switch devices.

Due to hardware limitations, it is not possible to match broadcast/multicast traffic on specific ports. You should use port isolation, drop traffic on ingress ports, or use VLAN filtering to prevent certain broadcast/multicast traffic from being forwarded.

Sub-menu: /interface ethernet switch acl

ACL condition part for MAC-related fields of packets.
disabled (yes | no; Default: no)	Enables or disables ACL entry.
table (egress | ingress; Default: ingress)	Selects the policy table for incoming or outgoing packets.
invert-match (yes | no; Default: no)	Inverts the whole ACL rule matching.
src-ports (ports,trunks)	Matching physical source ports or trunks.
dst-ports (ports,trunks)	Matching physical destination ports or trunks. It is not possible to match broadcast/multicast traffic on the egress port due to a hardware limitation.
mac-src-address (MAC address/Mask)	Source MAC address and mask.
mac-dst-address (MAC address/Mask)	Destination MAC address and mask.
dst-addr-registered (yes | no)	Defines whether to match packets with registered state - packets whose destination MAC address is in UFDB/MFDB/RFDB. Valid only in the egress table.
mac-protocol (802.2 | arp | homeplug-av | ip | ip-or-ipv6 | ipv6 | ipx | lldp | loop-protect | mpls-multicast | mpls-unicast | non-ip | packing-compr | packing-simple | pppoe | pppoe-discovery | rarp | service-vlan | vlan or integer: 0..65535 decimal format or 0x0000-0xffff hex format)	Ethernet payload type (MAC-level protocol)

    802.2 - 802.2 Frames (0x0004)
    arp - Address Resolution Protocol (0x0806)
    capsman - CAPsMAN to CAP MAC layer connection (0x88BB)
    dot1x - EAPoL IEEE 802.1X (0x888E)
    homeplug-av - HomePlug AV MME (0x88E1)
    ip - Internet Protocol version 4 (0x0800)
    ip-or-ipv6 - IPv4 or IPv6 (0x0800 or 0x86DD)
    ipv6 - Internet Protocol Version 6 (0x86DD)
    ipx - Internetwork Packet Exchange (0x8137)
    lacp - Link Aggregation Control Protocol (0x8809)
    lldp - Link Layer Discovery Protocol (0x88CC)
    loop-protect - Loop Protect Protocol (0x9003)
    macsec - MAC security IEEE 802.1AE (0x88E5)
    mpls-multicast - MPLS multicast (0x8848)
    mpls-unicast - MPLS unicast (0x8847)
    non-ip - Not Internet Protocol version 4 (not 0x0800)
    packing-compr - Encapsulated packets with compressed IP packing (0x9001)
    packing-simple - Encapsulated packets with simple IP packing (0x9000)
    pppoe - PPPoE Session Stage (0x8864)
    pppoe-discovery - PPPoE Discovery Stage (0x8863)
    rarp - Reverse Address Resolution Protocol (0x8035)
    romon - Router Management Overlay Network RoMON (0x88BF)
    service-vlan - Provider Bridging (IEEE 802.1ad) & Shortest Path Bridging IEEE 802.1aq (0x88A8)
    vlan - VLAN-tagged frame (IEEE 802.1Q) and Shortest Path Bridging IEEE 802.1aq with NNI compatibility (0x8100)

drop-precedence (drop | green | red | yellow)	Matching internal drop precedence. Valid only in the egress table.
custom-fields	

ACL condition part for VLAN-related fields of packets.
lookup-vid (0..4095)	VLAN id used in lookup. It can be changed before reaching the egress table.
service-vid (0-4095)	Matching service VLAN id.
service-pcp (0..7)	Matching service PCP.
service-dei (0..1)	Matching service DEI.
service-tag (priority-tagged | tagged | tagged-or-priority-tagged | untagged)	Format of the service tag.
customer-vid (0-4095)	Matching customer VLAN ID.
customer-pcp (0..7)	Matching customer PCP.
customer-dei (0..1)	Matching customer DEI.
customer-tag (priority-tagged | tagged | tagged-or-priority-tagged | untagged)	Format of the customer tag.
priority (0..15)	Matching internal priority. Valid only in the egress table.

ACL condition part for IPv4 and IPv6 related fields of packets.
ip-src (IPv4/0..32)	Matching source IPv4 address.
ip-dst (IPv4/0..32)	Matching destination IPv4 address.
ip-protocol (tcp | udp | udp-lite | other)	IP protocol type.
src-l3-port (0-65535)	Matching Layer3 source port.
dst-l3-port (0-65535)	Matching Layer3 destination port.
ttl (0 | 1 | max | other)	Matching TTL field of the packet.
dscp (0..63)	Matching DSCP field of the packet.
ecn (0..3)	Matching ECN field of the packet.
fragmented (yes | no)	Whether to match fragmented packets.
first-fragment (yes | no)	YES matches not fragmented and the first fragments, NO matches other fragments.
ipv6-src (IPv6/0..128)	Matching source IPv6 address.
ipv6-dst (IPv6/0..128)	Matching destination IPv6 address.
mac-isolation-profile (community1 | community2 | isolated | promiscuous)	Matches isolation profile based on UFDB. Valid only in the egress policy table.
src-mac-addr-state (dynamic-station-move | sa-found | sa-not-found | static-station-move)	Defines whether to match packets with registered state - packets whose destination MAC address is in UFDB/MFDB/RFDB. Valid only in the egress policy table.
flow-id (0..63)	

ACL rule action part.
action (copy-to-cpu | drop | forward |

redirect-to-cpu | send-to-new-dst-ports; Default:
forward)	

    copy-to-cpu - Packets are copied to the CPU if they match the ACL conditions.
    drop - Packets are dropped if they match the ACL conditions.
    forward - Packets are forwarded if they match the ACL conditions.
    redirect-to-cpu - Packets are redirected to the CPU if they match the ACL conditions.
    send-to-new-dst-ports - Packets are sent to new destination ports if they match the ACL conditions.

new-dst-ports (ports,trunks)	If the action is "send-to-new-dst-ports", then this property sets which ports/trunks are the new destinations.
mirror-to (mirror0 | mirror1)	Mirroring destination for ACL packets.
policer (policer)	Applied ACL Policer for ACL packets.
src-mac-learn (yes | no)	Whether to learn the source MAC of the matched ACL packets. Valid only in the ingress policy table.
new-service-vid (0..4095)	New service VLAN ID for ACL packets.
new-service-pcp (0..7)	New service PCP for ACL packets.
new-service-dei (0..1)	New service DEI for ACL packets.
new-customer-vid (0..4095)	New customer VLAN ID for ACL packets. If set to 4095, then traffic is dropped.
new-customer-pcp (0..7)	New customer PCP for ACL packets.
new-customer-dei (0..1)	New customer DEI for ACL packets.
new-dscp (0..63)	New DSCP for ACL packets.
new-priority (0..15)	New internal priority for ACL packets.
new-drop-precedence (drop | green | red | yellow)	New internal drop precedence for ACL packets.
new-registered-state (yes | no)	Whether to modify packet status. YES sets packet status to registered, NO - unregistered. Valid only in the ingress policy table.
new-flow-id (0..63)	

Filter bypassing part for ACL packets.
attack-filter-bypass (yes | no; Default: no)	
ingress-vlan-filter-bypass (yes | no; Default: no)	Allows bypassing ingress VLAN filtering in the VLAN table for matching packets. This applies only to the ingress policy table.
egress-vlan-filter-bypass (yes | no; Default: no)	Allows bypassing egress VLAN filtering in the VLAN table for matching packets. This applies only to the ingress policy table.
isolation-filter-bypass (yes | no; Default: no)	Allows bypassing the Isolation table for matching packets. This applies only to the ingress policy table.
egress-vlan-translate-bypass (yes | no; Default: no)	Allows bypassing egress VLAN translation table for matching packets.
ACL Policer

Sub-menu: /interface ethernet switch acl policer
name (string; Default: policerX)	Name of the Policer used in ACL.
yellow-rate (integer)	Maximum data rate limit for packets with yellow drop precedence.
yellow-burst (integer; Default: 0)	Maximum data rate which can be transmitted while the burst is allowed for packets with yellow drop precedence.
red-rate (integer); Default: 0)	Maximum data rate limit for packets with red drop precedence.
red-burst (integer; Default: 0)	Maximum data rate which can be transmitted while the burst is allowed for packets with red drop precedence.
meter-unit (bit | packet; Default: bit)	Measuring units for ACL traffic rate.
meter-len (layer-1 | layer-2 | layer-3; Default: layer-1)	Packet classification which sets the packet byte length for metering.

    layer-1 - includes entire layer-2 frame + FCS + inter-packet gap + preamble.
    layer-2 - includes layer-2 frame + FCS.
    layer-3 - includes only layer-3 + ethernet padding without layer-2 header and FCS.

color-awareness (yes | no; Default: no)	YES makes the policer to take into account pre-colored drop precedence, NO - ignores drop precedence.
bucket-coupling (yes | no; Default: no)	
yellow-action (drop | forward | remark; Default: drop)	Performed action for exceeded traffic with yellow drop precedence.
new-dei-for-yellow (0..1 | remap)	New DEI for yellow drop precedence packets.
new-pcp-for-yellow (0..7 | remap)	New PCP for yellow drop precedence packets.
new-dscp-for-yellow (0..63 | remap)	New DSCP for yellow drop precedence packets.
red-action (drop | forward | remark; Default: drop)	Performed action for exceeded traffic with red drop precedence.
new-dei-for-red (0..1 | remap)	New DEI for red drop precedence packets.
new-pcp-for-red (0..7 | remap)	New PCP for red drop precedence packets.
new-dscp-for-red (0..63 | remap)	New DSCP for red drop precedence packets.
See also

    CRS1xx/2xx series switches examples
    CRS Router
    CRS1xx/2xx VLANs with Trunks
    Basic VLAN switching
    Bridge Hardware Offloading
    Spanning Tree Protocol
    IGMP Snooping
    DHCP Snooping and Option 82
    MTU on RouterBOARD
    Layer2 misconfiguration